/*

For Understanding visually go to : https://www.geeksforgeeks.org/dsa/tree-data-structure/

Tree data structure ЁЯМ│ рж╣рж▓рзЛ ржПржХржЯрж╛ hierarchical structure, ржпрзЗржЯрж╛рждрзЗ ржбрзЗржЯрж╛ржЧрзБрж▓рзЛржХрзЗ parent-child relationship ржЖржХрж╛рж░рзЗ рж╕рж╛ржЬрж╛ржирзЛ рж╣рзЯред

ЁЯСЙ Basic Idea:

ржПржХрзЗ "tree" ржмрж▓рж╛ рж╣рзЯ ржХрж╛рж░ржг ржПржЯрж╛ ржЧрж╛ржЫрзЗрж░ ржорждрзЛ ржжрзЗржЦрждрзЗ тАФ

ржЙржкрж░рзЗ ржерж╛ржХрзЗ Root (ржорзВрж▓)
ржирж┐ржЪрзЗ ржерж╛ржХрзЗ Branches (child nodes)
ржЖрж░ leaf node ржкрж░рзНржпржирзНржд ржЫрзЬрж┐рзЯрзЗ ржпрж╛рзЯред

Structure of a Tree:
1. Root Node тЖТ ржкрзБрж░рзЛ tree-ржПрж░ starting pointред
2. Child Node тЖТ ржпрзЗржХрзЛржирзЛ node-ржПрж░ ржирж┐ржЪрзЗрж░ nodeред
3. Leaf Node тЖТ ржпрзЗржЧрзБрж▓рзЛрж░ ржЖрж░ child ржирзЗржЗред
4. Edge тЖТ ржжрзБржЗ node-ржПрж░ connectionред
5. Height тЖТ root ржерзЗржХрзЗ рж╕рж░рзНржмрзЛржЪрзНржЪ depth ржкрж░рзНржпржирзНрждред


Why we need to learn Tree Data Structure? ЁЯдФ

Tree рж╢рзЗржЦрж╛рж░ ржЕржирзЗржХ ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг ржХрж╛рж░ржг ржЖржЫрзЗржГ

1. Efficient Searching & Sorting
   ржпрзЗржоржи Binary Search Tree (BST) search operations logarithmic рж╕ржорзЯрзЗ ржХрж░рждрзЗ ржкрж╛рж░рзЗред

2. Hierarchical Data Representation
   ржЕржирзЗржХ ржбрзЗржЯрж╛ naturally tree ржЖржХрж╛рж░рзЗ ржерж╛ржХрзЗ (ржпрзЗржоржи: file system, organizational chart)ред
3. Used in Real-World Applications
4. File System (folders/files tree ржЖржХрж╛рж░рзЗ рж╕рж╛ржЬрж╛ржирзЛ)
5. Database Indexing (B-trees, B+ trees)
6. Compiler (syntax tree ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ)
7. AI/ML (decision trees, game trees)
8. Efficient Operations

Insertion, Deletion, Traversal ржЗрждрзНржпрж╛ржжрж┐ ржЕржирзЗржХ ржХрзНрж╖рзЗрждрзНрж░рзЗ array/linked list ржерзЗржХрзЗ ржмрзЗрж╢рж┐ efficientред

Foundation of Advanced DS & Algorithms

Heap, Segment Tree, Trie, Red-Black Tree, AVL TreeтАФрж╕ржм advanced DS tree-ржПрж░ ржЙржкрж░ ржнрж┐рждрзНрждрж┐ ржХрж░рзЗред


*/