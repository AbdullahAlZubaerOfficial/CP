ЁЯФ╣ DFS (Depth First Search):

Complexity: O(V+E)
ржХрж╛ржЬ: рж╢рзБржзрзБ ржЧрзНрж░рж╛ржл/ржЯрзНрж░рж┐ traverse ржХрж░рж╛ (path ржЦрзБржБржЬрждрзЗ, connectivity, cycle detection ржЗрждрзНржпрж╛ржжрж┐)ред
Shortest path ржмрзЗрж░ ржХрж░рзЗ ржирж╛ред ЁЯЪл


ЁЯФ╣ BFS (Breadth First Search):

Complexity: O(V+E)
ржХрж╛ржЬ:
Shortest distance / path ржмрзЗрж░ ржХрж░рзЗ ЁЯСЙ ржХрж┐ржирзНрждрзБ рж╕рзЗржЯрж╛ Unweighted Graph-ржПрж░ ржЬржирзНржпред
рж╕ржм edge-ржПрж░ weight ржпржжрж┐ 1 ржзрж░рж╛ рж╣ржпрж╝, рждржЦржи BFS ржХрж╛ржЬ ржХрж░ржмрзЗред
Source fix ржХрж░рждрзЗ рж╣ржпрж╝ред ЁЯОп

ЁЯФ╣ DijkstraтАЩs Algorithm : 

Complexity: O(E log V) (Priority Queue/Min-Heap ржжрж┐ржпрж╝рзЗ)
ржХрж╛ржЬ:
Shortest distance / path ржмрзЗрж░ ржХрж░рзЗ Weighted Graph-ржПред
Negative weight allowed ржирж╛ тЭМред
Source fix ржХрж░рждрзЗ рж╣ржпрж╝ред ЁЯОп

ЁЯФ╣ Bellman-Ford Algorithm : 

Complexity: O(VE)
ржХрж╛ржЬ:
Shortest distance / path ржмрзЗрж░ ржХрж░рзЗ Weighted Graph-ржПред
Negative weight edge allow ржХрж░рзЗ тЬЕред
ржПржоржиржХрж┐ negative cycle detect ржХрж░рждрзЗржУ ржкрж╛рж░рзЗред ЁЯФД
Source fix ржХрж░рждрзЗ рж╣ржпрж╝ред ЁЯОп

ЁЯФ╣ Floyd-Warshall Algorithm : 

Complexity: O(V┬│)
ржХрж╛ржЬ:
All Pairs Shortest Path ржмрзЗрж░ ржХрж░рзЗред (ржорж╛ржирзЗ ржПржХрж╕рж╛ржерзЗ рж╕ржм source тЖТ рж╕ржм destination)ред
Weighted Graph (Negative weight allowed, but negative cycle detect ржХрж░рждрзЗ рж╣ржпрж╝ ржЖрж▓рж╛ржжрж╛ ржнрж╛ржмрзЗ)ред
Source fix ржирж╛ ржерж╛ржХрж▓рзЗржУ рж╣ржмрзЗ, ржХрж╛рж░ржг multiple source ржХрж╛ржЬ ржХрж░рждрзЗ ржкрж╛рж░рзЗред ЁЯМН





ЁЯСЙ ржПржХ рж▓рж╛ржЗржирзЗ ржоржирзЗ рж░рж╛ржЦрж╛рж░ ржЯрзЗржХржирж┐ржХ:

DFS тЖТ Traverse ЁЯШО

BFS тЖТ Shortest path (Unweighted) ЁЯЫдя╕П

Dijkstra тЖТ Shortest path (Weighted, Positive) тЪб

Bellman-Ford тЖТ Shortest path (Weighted, Negative allowed) тЪая╕П

Floyd-Warshall тЖТ All-pairs shortest path (V┬│) ЁЯМР